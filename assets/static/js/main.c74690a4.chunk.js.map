{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","actions/profileActions.js","utils/is-empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/profileReducer.js","reducers/index.js","store.js","component/Layout/Navbar.js","component/Layout/Footer.js","component/Layout/Landing.js","commons/TextFieldGroups.js","component/auth/Register.js","component/auth/Login.js","component/dashboard/ProfileAction.js","component/dashboard/Experience.js","component/dashboard/Education.js","component/dashboard/Dashboard.js","commons/InputGroup.js","commons/TextAreaFieldGroup.js","commons/SelectListGroup.js","component/create-profile/CreateProfile.js","component/edit-profile/EditProfile.js","component/add-credentials/AddExperience.js","component/add-credentials/AddEducation.js","component/profile/ProfileItems.js","component/profile/Profile.js","component/profilesection/Profile.js","component/profilesection/ProfileHeader.js","component/profilesection/ProfileAbout.js","component/profilesection/ProfileGithub.js","component/profilesection/ProfileCred.js","commons/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logOutUser","dispatch","localStorage","removeItem","getCurrentProfile","setProfileLoading","get","then","res","data","catch","error","clearCurrentProfile","createProfile","profileData","history","post","response","push","err","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","user","profile","profiles","loading","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","Navbar","onLogOutClick","e","preventDefault","props","this","authLinks","className","to","style","color","marginRight","textDecoration","onClick","src","picture","alt","width","height","borderRadius","border","backgroundColor","geustLinks","data-toggle","data-target","id","Component","connect","Footer","Landing","TextFieldGroups","name","placeholder","label","info","onChange","disabled","classnames","defaultProps","Register","onSubmit","newObj","registerUser","setState","target","fullname","email","password","nextProps","userData","withRouter","Login","loginUser","message","setItem","decode","jwt_decode","ProfileAction","role","Experience","onDeleteClick","deleteExperience","console","log","experience","values","map","exp","index","key","company","title","from","current","delete","Education","deleteEducation","education","edu","school","degree","Dashboard","deleteAction","dashboardContent","handle","marginBottom","confirm","InputGroup","icon","TextAreaFieldGroup","SelectListGroup","selectOptions","options","option","CreateProfile","displaySocialInputs","skills","location","status","bio","githubusername","youtube","twitter","facebook","linkedin","instagram","website","socialInputs","class","prevState","EditProfile","social","AddExperience","addExperience","onCheck","description","checked","for","expData","AddEducation","addEducation","fieldofstudy","ProfileItems","split","skill","Profile","getProfiles","profileItems","ProfileH","match","params","getProfileByHandle","component","rest","render","jwtToken","currentTime","Date","now","href","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+RAYeA,EAXM,SAAAC,GAEfA,EAEFC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAG1CC,IAAMC,SAASC,QAAQC,OAAvB,eCiCEC,EAAiB,SAAAC,GAC5B,MAAO,CACLC,KC1C4B,mBD2C5BC,QAASF,IAKAG,EAAa,kBAAM,SAAAC,GAE9BC,aAAaC,WAAW,YAExBb,GAAa,GAEbW,EAASL,EAAe,OE3CbQ,EAAoB,kBAAM,SAAAH,GACrCA,EAASI,KACTb,IACGc,IAAI,kBACJC,MAAK,SAAAC,GAAG,OAAIP,EAAS,CAAEH,KDdD,cCcoBC,QAASS,EAAIC,UACvDC,OAAM,SAAAC,GAAK,OACVV,EAAS,CACPH,KDjBmB,cCkBnBC,QAAS,UAMJM,EAAoB,WAC/B,MAAO,CACLP,KDzB2B,oBC+BlBc,EAAsB,WACjC,MAAO,CACLd,KD/BiC,0BCoCxBe,EAAgB,SAACC,EAAaC,GAAd,OAA0B,SAAAd,GACrDT,IACGwB,KAAK,iBAAkBF,GACvBP,MAAK,SAAAU,GAAQ,OAAIF,EAAQG,KAAK,iBAC9BR,OAAM,SAAAS,GACLlB,EAAS,CACPH,KD/CkB,aCgDlBC,QAASoB,EAAIF,SAASR,Y,+BCnCfW,EAbC,SAAAC,GACd,YACYC,IAAVD,GACU,OAAVA,GACkB,kBAAVA,GAAoD,IAA9BE,OAAOC,KAAKH,GAAOI,QAC/B,kBAAVJ,GAA8C,IAAxBA,EAAMK,OAAOD,Q,yjBCH/C,IAAME,EAAe,CACnBC,iBAAiB,EACjBC,KAAM,ICHFF,EAAe,G,yjBCMrB,IAAMA,EAAe,CACnBG,QAAS,KACTC,SAAU,KACVC,SAAS,GCLIC,cAAgB,CAC7BC,KHCa,WAAwC,IAA/BC,EAA8B,uDAAtBR,EAAcS,EAAQ,uCACpD,OAAQA,EAAOtC,MACb,IHR4B,mBGS1B,OAAO,EAAP,GACKqC,EADL,CAEEP,iBAAkBR,EAAQgB,EAAOrC,SACjC8B,KAAMO,EAAOrC,UAGjB,QACE,OAAOoC,IGVXE,OFJa,WAAwC,IAA/BF,EAA8B,uDAAtBR,EAAcS,EAAQ,uCACpD,OAAQA,EAAOtC,MACb,IJLsB,aIMpB,OAAOsC,EAAOrC,QAChB,QACE,OAAOoC,IEAXL,QDKa,WAAwC,IAA/BK,EAA8B,uDAAtBR,EAAcS,EAAQ,uCACpD,OAAQA,EAAOtC,MACb,ILZ2B,kBKazB,OAAO,KACFqC,EADL,CAEEH,SAAS,IAEb,ILlBuB,cKmBrB,OAAO,KACFG,EADL,CAEEL,QAASM,EAAOrC,QAChBiC,SAAS,IAEb,ILpBwB,eKqBtB,OAAO,KACFG,EADL,CAEEJ,SAAUK,EAAOrC,QACjBiC,SAAS,IAEb,IL3BiC,wBK4B/B,OAAO,KACFG,EADL,CAEEL,QAAS,OAEb,QACE,OAAOK,MElCPG,EAAa,CAACC,KAYLC,EAXDC,YACZC,EAHmB,GAKnBC,YACEC,IAAe,WAAf,EAAmBN,GACnBO,OAAOC,6BACDD,OAAOC,+BACP,SAAAC,GAAC,OAAIA,K,mCCJTC,E,2MACJC,cAAgB,SAAAC,GACdA,EAAEC,iBAGF,EAAKC,MAAMpD,aAGX,EAAKoD,MAAMxC,uB,wEAGH,IAAD,EAC2ByC,KAAKD,MAAMlB,KAArCN,EADD,EACCA,gBAAiBC,EADlB,EACkBA,KAEnByB,EACJ,wBAAIC,UAAU,sBACZ,wBAAIA,UAAU,iBACZ,kBAAC,IAAD,CACEC,GAAG,aACHC,MAAO,CACLC,MAAO,OACPC,YAAa,OACbC,eAAgB,SALpB,cAWF,wBAAIL,UAAU,YACZ,4BAAQM,QAASR,KAAKJ,eACpB,yBACEa,IAAKjC,EAAKkC,QACVC,IAAI,eACJP,MAAO,CACLQ,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdR,YAAa,MACbS,OAAQ,OACRC,gBAAiB,UACjBX,MAAO,UAXb,YAoBAY,EACJ,wBAAIf,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,aAA9B,YAIF,wBAAID,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,UAA9B,WAMN,OACE,yBAAKD,UAAU,oDACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,KAAlC,gBAGA,4BACED,UAAU,iBACVzD,KAAK,SACLyE,cAAY,WACZC,cAAY,eAEZ,0BAAMjB,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BkB,GAAG,cAC3C,wBAAIlB,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,aAC3B,IADH,gBAMH5B,EAAkB0B,EAAYgB,S,GAvFtBI,aA2GNC,eAPS,SAAAxC,GACtB,MAAO,CACLD,KAAMC,EAAMD,KACZG,OAAQF,EAAME,UAMhB,CAAErC,aAAYY,uBAFD+D,CAGb3B,GC1Ga4B,E,iLARX,OACE,yBAAKrB,UAAU,UACb,6E,GAJamB,aCGfG,E,4LAGExB,KAAKD,MAAMlB,KAAKN,iBAClByB,KAAKD,MAAMrC,QAAQG,KAAK,gB,+BAK1B,OACE,yBAAKqC,UAAU,WACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,kBAAd,uBACA,uBAAGA,UAAU,QACV,IADH,wFAKA,6BACA,kBAAC,IAAD,CAAMC,GAAG,WAAWD,UAAU,4BAA9B,WAGA,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,wBAA5B,kB,GAzBMmB,aA+CPC,eANS,SAAAxC,GACtB,MAAO,CACLD,KAAMC,EAAMD,QAMd,KAFayC,CAGbE,G,iBCnDIC,EAAkB,SAAC,GAUlB,IATLC,EASI,EATJA,KACAC,EAQI,EARJA,YACA3D,EAOI,EAPJA,MAEAV,GAKI,EANJsE,MAMI,EALJtE,OACAuE,EAII,EAJJA,KACApF,EAGI,EAHJA,KACAqF,EAEI,EAFJA,SACAC,EACI,EADJA,SAEA,OACE,yBAAK7B,UAAU,cACb,2BACEzD,KAAMA,EACNyD,UAAW8B,IAAW,+BAAgC,CACpD,aAAc1E,IAEhBqE,YAAaA,EACbD,KAAMA,EACN1D,MAAOA,EACP8D,SAAUA,EACVC,SAAUA,IAEXF,GAAQ,yBAAK3B,UAAU,wBAAwB2B,GAC/CvE,GAAS,yBAAK4C,UAAU,oBAAoB5C,KAenDmE,EAAgBQ,aAAe,CAC7BxF,KAAM,QAGOgF,Q,kOCzCTS,E,YAEJ,WAAYnC,GAAQ,IAAD,8BACjB,4CAAMA,KAYRoC,SAAW,SAAAtC,GACTA,EAAEC,iBAEF,IAAMsC,E,yVAAM,IAAQ,EAAKtD,cAElBsD,EAAOpD,OAEd,EAAKe,MAAMsC,aAAaD,EAAQ,EAAKrC,MAAMrC,UApB1B,EAwBnBoE,SAAW,SAAAjC,GACT,EAAKyC,SAAL,eAAiBzC,EAAE0C,OAAOb,KAAO7B,EAAE0C,OAAOvE,SAvB1C,EAAKc,MAAQ,CACX0D,SAAU,GACVC,MAAO,GACP/B,QAAS,GACTgC,SAAU,GAEV1D,OAAQ,IARO,E,iFA8BbgB,KAAKD,MAAMlB,KAAKN,iBAClByB,KAAKD,MAAMrC,QAAQG,KAAK,gB,gDAIF8E,GACpBA,EAAU3D,QACZgB,KAAKsC,SAAS,CAAEtD,OAAQ2D,EAAU3D,W,+BAI5B,IACAA,EAAWgB,KAAKlB,MAAhBE,OACR,OACE,yBAAKkB,UAAU,2BACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,WACA,uBAAGA,UAAU,oBAAb,oCAGA,0BAAMiC,SAAUnC,KAAKmC,UACnB,kBAAC,EAAD,CACE1F,KAAK,OACLkF,YAAY,WACZrE,MAAO0B,EAAOwD,SACdd,KAAK,WACL1D,MAAOgC,KAAKlB,MAAM0D,SAClBV,SAAU9B,KAAK8B,WAGjB,kBAAC,EAAD,CACErF,KAAK,QACLkF,YAAY,QACZrE,MAAO0B,EAAOyD,MACdf,KAAK,QACL1D,MAAOgC,KAAKlB,MAAM2D,MAClBX,SAAU9B,KAAK8B,WAGjB,kBAAC,EAAD,CACErF,KAAK,OACLkF,YAAY,UACZrE,MAAO0B,EAAO0B,QACdgB,KAAK,UACL1D,MAAOgC,KAAKlB,MAAM4B,QAClBoB,SAAU9B,KAAK8B,WAGjB,kBAAC,EAAD,CACErF,KAAK,WACLkF,YAAY,WACZrE,MAAO0B,EAAO0D,SACdhB,KAAK,WACL1D,MAAOgC,KAAKlB,MAAM4D,SAClBZ,SAAU9B,KAAK8B,WAGjB,2BAAOrF,KAAK,SAASyD,UAAU,yC,GA3FxBmB,aAsHRC,eAXS,SAAAxC,GACtB,MAAO,CACLD,KAAMC,EAAMD,KACZG,OAAQF,EAAME,UAUhB,CAAEqD,ab1HwB,SAACO,EAAUlF,GAAX,OAAuB,SAAAd,GACjDT,IACGwB,KAAK,uBAAwBiF,GAC7B1F,MAAK,SAAAU,GAAQ,OAAIF,EAAQG,KAAK,aAC9BR,OAAM,SAAAS,GACLlB,EAAS,CACPH,KCXkB,aDYlBC,QAASoB,EAAIF,SAASR,aaiHfkE,CAGbuB,YAAWX,I,kOC3HPY,E,YAEJ,WAAY/C,GAAQ,IAAD,8BACjB,4CAAMA,KASRoC,SAAW,SAAAtC,GACTA,EAAEC,iBACF,IAAMsC,E,yVAAM,IAAQ,EAAKtD,cAClBsD,EAAOpD,OACd,EAAKe,MAAMgD,UAAUX,IAdJ,EAkBnBN,SAAW,SAAAjC,GACT,EAAKyC,SAAL,eAAiBzC,EAAE0C,OAAOb,KAAO7B,EAAE0C,OAAOvE,SAjB1C,EAAKc,MAAQ,CACX2D,MAAO,GACPC,SAAU,GACV1D,OAAQ,IALO,E,iFAwBbgB,KAAKD,MAAMlB,KAAKN,iBAClByB,KAAKD,MAAMrC,QAAQG,KAAK,gB,gDAIF8E,GAEpBA,EAAU9D,KAAKN,iBACjByB,KAAKD,MAAMrC,QAAQG,KAAK,cAGtB8E,EAAU3D,QACZgB,KAAKsC,SAAS,CAAEtD,OAAQ2D,EAAU3D,W,+BAI5B,IACAA,EAAWgB,KAAKlB,MAAhBE,OAER,OACE,yBAAKkB,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,UACA,uBAAGA,UAAU,oBAAb,wCAIClB,EAAOgE,SACN,uBAAG9C,UAAU,2BAA2BlB,EAAOgE,SAGjD,0BAAMb,SAAUnC,KAAKmC,UACnB,kBAAC,EAAD,CACE1F,KAAK,QACLkF,YAAY,gBACZrE,MAAO0B,EAAOyD,MACdf,KAAK,QACL1D,MAAOgC,KAAKlB,MAAM2D,MAClBX,SAAU9B,KAAK8B,WAGjB,kBAAC,EAAD,CACErF,KAAK,WACLkF,YAAY,WACZrE,MAAO0B,EAAO0D,SACdhB,KAAK,WACL1D,MAAOgC,KAAKlB,MAAM4D,SAClBZ,SAAU9B,KAAK8B,WAGjB,2BAAOrF,KAAK,SAASyD,UAAU,yC,GA9E3BmB,aAqGLC,gBAPS,SAAAxC,GACtB,MAAO,CACLD,KAAMC,EAAMD,KACZG,OAAQF,EAAME,UAMhB,CAAE+D,Ud1FqB,SAAAH,GAAQ,OAAI,SAAAhG,GACnCT,IACGwB,KAAK,oBAAqBiF,GAC1B1F,MAAK,SAAAU,GAAY,IAER1B,EAAU0B,EAASR,KAAnBlB,MAGRW,aAAaoG,QAAQ,WAAY/G,GAGjCD,EAAaC,GAGb,IAAMgH,EAASC,IAAWjH,GAG1BU,EAASL,EAAe2G,OAEzB7F,OAAM,SAAAS,GAAG,OAAIlB,EAAS,CAAEH,KCrCH,aDqCqBC,QAASoB,EAAIF,SAASR,acqEtDkE,CAGbwB,GCtFaM,G,iLAlBX,OACE,yBAAKlD,UAAU,iBAAiBmD,KAAK,SACnC,kBAAC,IAAD,CAAMlD,GAAG,gBAAgBD,UAAU,iBACjC,uBAAGA,UAAU,qCADf,iBAGA,kBAAC,IAAD,CAAMC,GAAG,kBAAkBD,UAAU,iBACnC,uBAAGA,UAAU,mCADf,kBAIA,kBAAC,IAAD,CAAMC,GAAG,iBAAiBD,UAAU,iBAClC,uBAAGA,UAAU,wCADf,sB,GAXoBmB,aCEtBiC,G,2MACJC,cAAgB,SAAAnC,GACd,EAAKrB,MAAMyD,iBAAiBpC,I,wEAGpB,IAAD,OACPqC,QAAQC,MAER,IAAMC,EAAazF,OAAO0F,OAAO5D,KAAKD,MAAM4D,YAAYE,KACtD,SAACC,EAAKC,GAAN,OACE,wBAAIC,IAAKF,EAAI1C,IACX,4BAAK0C,EAAIG,SACT,4BAAKH,EAAII,OACT,4BACGJ,EAAIK,KADP,MACgBL,EAAIM,QAAU,MAAQN,EAAI3D,IAE1C,4BACE,4BACEK,QAAS,kBAAM,EAAK+C,cAAcO,EAAI1C,KACtClB,UAAU,kBAFZ,eAUR,OACE,6BACE,sDACA,2BAAOA,UAAU,SACf,+BACE,uCACA,qCACA,oCACA,8BAGDyD,Q,GAtCctC,aA0DVC,gBAPS,SAAAxC,GACtB,MAAO,KAQP,CAAE0E,iBdmC4B,SAAApC,GAAE,OAAI,SAAAxE,GACpCT,IACGkI,OADH,oCACuCjD,IACpClE,MAAK,SAAAU,GAAQ,OACZhB,EAAS,CACPH,KDvGmB,cCwGnBC,QAASkB,EAASR,UAGrBC,OAAM,SAAAS,GACLlB,EAAS,CACPH,KD/GkB,aCgHlBC,QAASoB,EAAIF,SAASR,acjDfkE,CAGbgC,IC7DIgB,G,2MACJf,cAAgB,SAAAnC,GACd,EAAKrB,MAAMwE,gBAAgBnD,I,wEAGnB,IAAD,OACPqC,QAAQC,MAER,IAAMc,EAAYtG,OAAO0F,OAAO5D,KAAKD,MAAMyE,WAAWX,KAAI,SAAAY,GAAG,OAC3D,wBAAIT,IAAKS,EAAIrD,IACX,4BAAKqD,EAAIC,QACT,4BAAKD,EAAIE,QACT,4BACGF,EAAIN,KADP,MACgBM,EAAIL,QAAU,MAAQK,EAAItE,IAE1C,4BACE,4BACEK,QAAS,kBAAM,EAAK+C,cAAckB,EAAIrD,KACtClB,UAAU,kBAFZ,eASN,OACE,6BACE,qDACA,2BAAOA,UAAU,SACf,+BACE,sCACA,sCACA,oCACA,8BAGDsE,Q,GApCanD,aAwDTC,gBAPS,SAAAxC,GACtB,MAAO,KAQP,CAAEyF,gBfuD2B,SAAAnD,GAAE,OAAI,SAAAxE,GACnCT,IACGkI,OADH,mCACsCjD,IACnClE,MAAK,SAAAU,GAAQ,OACZhB,EAAS,CACPH,KDzHmB,cC0HnBC,QAASkB,EAASR,UAGrBC,OAAM,SAAAS,GACLlB,EAAS,CACPH,KDjIkB,aCkIlBC,QAASoB,EAAIF,SAASR,aerEfkE,CAGbgD,ICvDIM,G,2MAKJrB,cAAgB,SAAA1D,GACdA,EAAEC,iBACF,EAAKC,MAAM8E,gB,mFALX7E,KAAKD,MAAMhD,sB,+BAQH,IAGJ+H,EAFItG,EAASwB,KAAKD,MAAMlB,KAApBL,KADD,EAEsBwB,KAAKD,MAAMtB,QAAhCA,EAFD,EAECA,QAASE,EAFV,EAEUA,QAoDjB,OAhDEmG,EADc,OAAZrG,GAAoBE,EAEpB,yBAAKuB,UAAU,eACb,yBAAKA,UAAU,8BAA8BmD,KAAK,UAChD,0BAAMnD,UAAU,WAAhB,gBAMS,MAAXzB,GAAmBP,OAAOC,KAAKM,GAASL,OAAS,EAEjD,6BACE,uBAAG8B,UAAU,mBAAb,UACU,IACR,kBAAC,IAAD,CAAMC,GAAE,mBAAc1B,EAAQsG,OAAtB,MAAkCvG,EAAKgE,WAEjD,kBAAC,GAAD,MACwB,OAAvB/D,EAAQkF,WACP,kBAAC,GAAD,CAAYA,WAAYlF,EAAQkF,aAEhC,GAEqB,OAAtBlF,EAAQ+F,UACP,kBAAC,GAAD,CAAWA,UAAW/F,EAAQ+F,YAE9B,GAIF,yBAAKtE,UAAW,CAAE8E,aAAc,UAChC,4BAAQxE,QAASR,KAAKuD,cAAerD,UAAU,kBAA/C,sBAOF,6BACE,uBAAGA,UAAU,mBAAb,WAAwC1B,EAAKgE,UAC7C,sFACA,kBAAC,IAAD,CAAMrC,GAAG,iBAAiBD,UAAU,uBAApC,mBASN,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,aAAd,aACC4E,S,GArEWzD,aA2FTC,gBAPS,SAAAxC,GACtB,MAAO,CACLD,KAAMC,EAAMD,KACZJ,QAASK,EAAML,WAMjB,CAAE1B,oBAAmB8H,ahBhDK,kBAAM,SAAAjI,GAC5B4C,OAAOyF,QAAQ,iDACjB9I,IACGkI,OAAO,kBACPnH,MAAK,SAAAU,GAAQ,OACZhB,EAAS,CACPH,KD3DsB,mBC4DtBC,QAAS,QAGZW,OAAM,SAAAS,GACLlB,EAAS,CACPH,KDlEgB,aCmEhBC,QAASoB,EAAIF,SAASR,agBiCjBkE,CAGbsD,ICnGIM,GAAa,SAAC,GAUb,IATLxD,EASI,EATJA,KACAC,EAQI,EARJA,YACA3D,EAOI,EAPJA,MACAmH,EAMI,EANJA,KACA7H,EAKI,EALJA,MAEAb,GAGI,EAJJoF,KAII,EAHJpF,MACAqF,EAEI,EAFJA,SACAC,EACI,EADJA,SAEA,OACE,yBAAK7B,UAAU,oBACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,oBACd,uBAAGA,UAAWiF,MAIlB,2BACE1I,KAAMA,EACNyD,UAAW8B,IAAW,+BAAgC,CACpD,aAAc1E,IAEhBqE,YAAaA,EACbD,KAAMA,EACN1D,MAAOA,EACP8D,SAAUA,EACVC,SAAUA,IAEXzE,GAAS,yBAAK4C,UAAU,oBAAoB5C,KAgBnD4H,GAAWjD,aAAe,CACxBxF,KAAM,QAGOyI,UChBAE,GAlCY,SAAC,GAOrB,IANL1D,EAMI,EANJA,KACAC,EAKI,EALJA,YACA3D,EAII,EAJJA,MACAV,EAGI,EAHJA,MACAuE,EAEI,EAFJA,KACAC,EACI,EADJA,SAEA,OACE,yBAAK5B,UAAU,cACb,8BACEA,UAAW8B,IAAW,+BAAgC,CACpD,aAAc1E,IAEhBqE,YAAaA,EACbD,KAAMA,EACN1D,MAAOA,EACP8D,SAAUA,IAEXD,GAAQ,yBAAK3B,UAAU,wBAAwB2B,GAE/CvE,GAAS,yBAAK4C,UAAU,oBAAoB5C,KCoBpC+H,GAzCS,SAAC,GAQlB,IAPL3D,EAOI,EAPJA,KAEA1D,GAKI,EANJ2D,YAMI,EALJ3D,OACAV,EAII,EAJJA,MACAuE,EAGI,EAHJA,KACAC,EAEI,EAFJA,SAGMwD,EADF,EADJC,QAE8B1B,KAAI,SAAA2B,GAAM,OACtC,4BAAQxB,IAAKwB,EAAO5D,MAAO5D,MAAOwH,EAAOxH,OACtCwH,EAAO5D,UAIZ,OACE,yBAAK1B,UAAU,cACb,4BACEA,UAAW8B,IAAW,+BAAgC,CACpD,aAAc1E,IAEhBoE,KAAMA,EACN1D,MAAOA,EACP8D,SAAUA,GAETwD,GAEFzD,GAAQ,yBAAK3B,UAAU,wBAAwB2B,GAC/CvE,GAAS,yBAAK4C,UAAU,oBAAoB5C,K,mOCtB7CmI,G,YACJ,WAAY1F,GAAQ,IAAD,8BACjB,4CAAMA,KA6BRoC,SAAW,SAAAtC,GACTA,EAAEC,iBACF,IAAMsC,E,2VAAM,IAAQ,EAAKtD,cAClBsD,EAAOpD,OACd,EAAKe,MAAMvC,cAAc4E,EAAQ,EAAKrC,MAAMrC,UAlC3B,EAsCnBoE,SAAW,SAAAjC,GACT,EAAKyC,SAAL,eAAiBzC,EAAE0C,OAAOb,KAAO7B,EAAE0C,OAAOvE,SArC1C,EAAKc,MAAQ,CACX4G,qBAAqB,EACrBC,OAAQ,GACRZ,OAAQ,GACRd,QAAS,GACT2B,SAAU,GACVC,OAAQ,GACRC,IAAK,GACLC,eAAgB,GAChBC,QAAS,KACTC,QAAS,KACTC,SAAU,KACVC,SAAU,KACVC,UAAW,KACXC,QAAS,KACTrH,OAAQ,IAjBO,E,uFAsBO2D,GAEpBA,EAAU3D,QACZgB,KAAKsC,SAAS,CAAEtD,OAAQ2D,EAAU3D,W,+BAiB5B,IAeJsH,EAfG,SACiCtG,KAAKlB,MAArCE,EADD,EACCA,OAiER,OAlEO,EACS0G,sBAiBdY,EACE,6BACE,kBAAC,GAAD,CACE3E,YAAY,sBACZrE,MAAO0B,EAAOiH,QACdvE,KAAK,UACL1D,MAAOgC,KAAKlB,MAAMmH,QAClBnE,SAAU9B,KAAK8B,SACfqD,KAAK,kBAGP,kBAAC,GAAD,CACExD,YAAY,wBACZrE,MAAO0B,EAAOoH,UACd1E,KAAK,YACL1D,MAAOgC,KAAKlB,MAAMsH,UAClBtE,SAAU9B,KAAK8B,SACfqD,KAAK,oBAGP,kBAAC,GAAD,CACExD,YAAY,uBACZrE,MAAO0B,EAAOkH,SACdxE,KAAK,WACL1D,MAAOgC,KAAKlB,MAAMoH,SAClBpE,SAAU9B,KAAK8B,SACfqD,KAAK,mBAEP,kBAAC,GAAD,CACExD,YAAY,uBACZrE,MAAO0B,EAAOmH,SACdzE,KAAK,WACL1D,MAAOgC,KAAKlB,MAAMqH,SAClBrE,SAAU9B,KAAK8B,SACfqD,KAAK,mBAEP,kBAAC,GAAD,CACExD,YAAY,sBACZrE,MAAO0B,EAAOgH,QACdtE,KAAK,UACL1D,MAAOgC,KAAKlB,MAAMkH,QAClBlE,SAAU9B,KAAK8B,SACfqD,KAAK,oBAOX,yBAAKoB,MAAM,kBACT,yBAAKA,MAAM,aACT,yBAAKA,MAAM,OACT,yBAAKA,MAAM,mBACT,kBAAC,IAAD,CAAMpG,GAAG,aAAaoG,MAAM,iBAA5B,WAGA,wBAAIA,MAAM,yBAAV,uBACA,uBAAGA,MAAM,oBAAT,6DAGA,2BAAOA,MAAM,gBAAb,sBACA,0BAAMpE,SAAUnC,KAAKmC,UACnB,kBAAC,EAAD,CACER,YAAY,WACZrE,MAAO0B,EAAO+F,OACdrD,KAAK,SACL1D,MAAOgC,KAAKlB,MAAMiG,OAClBjD,SAAU9B,KAAK8B,SACfD,KAAK,+CAGP,kBAAC,GAAD,CACE0D,QAvFE,CACd,CAAEvH,MAAO,IAAK4D,MAAO,gCACrB,CAAE5D,MAAO,YAAa4D,MAAO,aAC7B,CAAE5D,MAAO,mBAAoB4D,MAAO,oBACpC,CAAE5D,MAAO,mBAAoB4D,MAAO,oBACpC,CAAE5D,MAAO,UAAW4D,MAAO,WAC3B,CAAE5D,MAAO,sBAAuB4D,MAAO,uBACvC,CAAE5D,MAAO,aAAc4D,MAAO,yBAC9B,CAAE5D,MAAO,SAAU4D,MAAO,UAC1B,CAAE5D,MAAO,QAAS4D,MAAO,UA+EbtE,MAAO0B,EAAO6G,OACdnE,KAAK,SACL1D,MAAOgC,KAAKlB,MAAM+G,OAClB/D,SAAU9B,KAAK8B,SACfD,KAAK,sBAGP,kBAAC,EAAD,CACEF,YAAY,UACZrE,MAAO0B,EAAOiF,QACdvC,KAAK,UACL1D,MAAOgC,KAAKlB,MAAMmF,QAClBnC,SAAU9B,KAAK8B,SACfD,KAAK,2CAGP,kBAAC,EAAD,CACEF,YAAY,UACZrE,MAAO0B,EAAOqH,QACd3E,KAAK,UACL1D,MAAOgC,KAAKlB,MAAMuH,QAClBvE,SAAU9B,KAAK8B,SACfD,KAAK,gCAGP,kBAAC,EAAD,CACEF,YAAY,WACZrE,MAAO0B,EAAO4G,SACdlE,KAAK,WACL1D,MAAOgC,KAAKlB,MAAM8G,SAClB9D,SAAU9B,KAAK8B,SACfD,KAAK,4CAGP,kBAAC,EAAD,CACEF,YAAY,SACZrE,MAAO0B,EAAO2G,OACdjE,KAAK,SACL1D,MAAOgC,KAAKlB,MAAM6G,OAClB7D,SAAU9B,KAAK8B,SACfD,KAAK,uDAGP,kBAAC,EAAD,CACEF,YAAY,iBACZrE,MAAO0B,EAAO+G,eACdrE,KAAK,iBACL1D,MAAOgC,KAAKlB,MAAMiH,eAClBjE,SAAU9B,KAAK8B,SACfD,KAAK,oEAGP,kBAAC,GAAD,CACEF,YAAY,MACZrE,MAAO0B,EAAO8G,IACdpE,KAAK,MACL1D,MAAOgC,KAAKlB,MAAMgH,IAClBhE,SAAU9B,KAAK8B,SACfD,KAAK,oCAGP,yBAAK3B,UAAU,QACb,4BACEM,QAAS,WACP,EAAK8B,UAAS,SAAAkE,GAAS,MAAK,CAC1Bd,qBAAsBc,EAAUd,yBAGpCjJ,KAAK,SACLyD,UAAU,iBAPZ,4BAWA,0BAAMA,UAAU,cAAhB,aAGDoG,EACD,2BACE7J,KAAK,SACLuB,MAAM,SACNuI,MAAM,yC,GAtNIlF,aA8ObC,gBAPS,SAAAxC,GACtB,MAAO,CACLE,OAAQF,EAAME,OACdP,QAASK,EAAML,WAMjB,CAAEjB,iBAFW8D,CAGbuB,YAAW4C,K,mOC/OPgB,G,YACJ,WAAY1G,GAAQ,IAAD,8BACjB,4CAAMA,KA0FRoC,SAAW,SAAAtC,GACTA,EAAEC,iBACF,IAAMsC,E,2VAAM,IAAQ,EAAKtD,cAClBsD,EAAOpD,OACd,EAAKe,MAAMvC,cAAc4E,EAAQ,EAAKrC,MAAMrC,UA/F3B,EAmGnBoE,SAAW,SAAAjC,GACT,EAAKyC,SAAL,eAAiBzC,EAAE0C,OAAOb,KAAO7B,EAAE0C,OAAOvE,SAlG1C,EAAKc,MAAQ,CACX4G,qBAAqB,EACrBC,OAAQ,GACRZ,OAAQ,GACRd,QAAS,GACT2B,SAAU,GACVC,OAAQ,GACRC,IAAK,GACLC,eAAgB,GAChBC,QAAS,KACTC,QAAS,KACTC,SAAU,KACVC,SAAU,KACVC,UAAW,KACXC,QAAS,KACTrH,OAAQ,IAjBO,E,iFAsBjBgB,KAAKD,MAAMhD,sB,gDAIa4F,GAOxB,GALIA,EAAU3D,QACZgB,KAAKsC,SAAS,CAAEtD,OAAQ2D,EAAU3D,SAIhC2D,EAAUlE,QAAQA,QAAS,CAAC,IACtBA,EAAYkE,EAAUlE,QAAtBA,QAKJA,EAAQiI,QACV1G,KAAKsC,SAAS,CACZoD,qBAAqB,IAIzBjH,EAAQiI,OAAS3I,EAAQU,EAAQiI,QAAU,GAAKjI,EAAQiI,OACxDjI,EAAQ4H,QAAUtI,EAAQU,EAAQ4H,SAAW,KAAO5H,EAAQ4H,QAC5D5H,EAAQsG,OAAShH,EAAQU,EAAQsG,QAAU,GAAKtG,EAAQsG,OACxDtG,EAAQwF,QAAUlG,EAAQU,EAAQwF,SAAW,GAAKxF,EAAQwF,QAC1DxF,EAAQmH,SAAW7H,EAAQU,EAAQmH,UAAY,GAAKnH,EAAQmH,SAC5DnH,EAAQoH,OAAS9H,EAAQU,EAAQoH,QAAU,GAAKpH,EAAQoH,OACxDpH,EAAQqH,IAAM/H,EAAQU,EAAQqH,KAAO,GAAKrH,EAAQqH,IAClDrH,EAAQkH,OAAS5H,EAAQU,EAAQkH,QAAU,GAAKlH,EAAQkH,OACxDlH,EAAQsH,eAAiBhI,EAAQU,EAAQsH,gBACrC,GACAtH,EAAQsH,eACZtH,EAAQiI,OAAOV,QAAUjI,EAAQU,EAAQiI,OAAOV,SAC5C,KACAvH,EAAQiI,OAAOV,QACnBvH,EAAQiI,OAAOP,SAAWpI,EAAQU,EAAQiI,OAAOP,UAC7C,KACA1H,EAAQiI,OAAOP,SACnB1H,EAAQiI,OAAOT,QAAUlI,EAAQU,EAAQiI,OAAOT,SAC5C,KACAxH,EAAQiI,OAAOT,QACnBxH,EAAQiI,OAAON,UAAYrI,EAAQU,EAAQiI,OAAON,WAC9C,KACA3H,EAAQiI,OAAON,UACnB3H,EAAQiI,OAAOR,SAAWnI,EAAQU,EAAQiI,OAAOR,UAC7C,KACAzH,EAAQiI,OAAOR,SAEnBlG,KAAKsC,SAAS,CACZqD,OAAQlH,EAAQkH,OAChBZ,OAAQtG,EAAQsG,OAChBd,QAASxF,EAAQwF,QACjB2B,SAAUnH,EAAQmH,SAClBC,OAAQpH,EAAQoH,OAChBC,IAAKrH,EAAQqH,IACbC,eAAgBtH,EAAQsH,eACxBC,QAASvH,EAAQiI,OAAOV,QACxBC,QAASxH,EAAQiI,OAAOT,QACxBC,SAAUzH,EAAQiI,OAAOR,SACzBC,SAAU1H,EAAQiI,OAAOP,SACzBC,UAAW3H,EAAQiI,OAAON,UAC1BC,QAAS5H,EAAQiI,OAAOL,a,+BAkBpB,IAeJC,EAfG,SACiCtG,KAAKlB,MAArCE,EADD,EACCA,OAiER,OAlEO,EACS0G,sBAiBdY,EACE,6BACE,kBAAC,GAAD,CACE3E,YAAY,sBACZrE,MAAO0B,EAAOiH,QACdvE,KAAK,UACL1D,MAAOgC,KAAKlB,MAAMmH,QAClBnE,SAAU9B,KAAK8B,SACfqD,KAAK,kBAGP,kBAAC,GAAD,CACExD,YAAY,wBACZrE,MAAO0B,EAAOoH,UACd1E,KAAK,YACL1D,MAAOgC,KAAKlB,MAAMsH,UAClBtE,SAAU9B,KAAK8B,SACfqD,KAAK,oBAGP,kBAAC,GAAD,CACExD,YAAY,uBACZrE,MAAO0B,EAAOkH,SACdxE,KAAK,WACL1D,MAAOgC,KAAKlB,MAAMoH,SAClBpE,SAAU9B,KAAK8B,SACfqD,KAAK,mBAEP,kBAAC,GAAD,CACExD,YAAY,uBACZrE,MAAO0B,EAAOmH,SACdzE,KAAK,WACL1D,MAAOgC,KAAKlB,MAAMqH,SAClBrE,SAAU9B,KAAK8B,SACfqD,KAAK,mBAEP,kBAAC,GAAD,CACExD,YAAY,sBACZrE,MAAO0B,EAAOgH,QACdtE,KAAK,UACL1D,MAAOgC,KAAKlB,MAAMkH,QAClBlE,SAAU9B,KAAK8B,SACfqD,KAAK,oBAOX,yBAAKoB,MAAM,kBACT,yBAAKA,MAAM,aACT,yBAAKA,MAAM,OACT,yBAAKA,MAAM,mBACT,kBAAC,IAAD,CAAMpG,GAAG,aAAaoG,MAAM,iBAA5B,WAGA,wBAAIA,MAAM,yBAAV,qBAEA,2BAAOA,MAAM,gBAAb,sBACA,0BAAMpE,SAAUnC,KAAKmC,UACnB,kBAAC,EAAD,CACER,YAAY,WACZrE,MAAO0B,EAAO+F,OACdrD,KAAK,SACL1D,MAAOgC,KAAKlB,MAAMiG,OAClBjD,SAAU9B,KAAK8B,SACfD,KAAK,+CAGP,kBAAC,GAAD,CACE0D,QArFE,CACd,CAAEvH,MAAO,IAAK4D,MAAO,gCACrB,CAAE5D,MAAO,YAAa4D,MAAO,aAC7B,CAAE5D,MAAO,mBAAoB4D,MAAO,oBACpC,CAAE5D,MAAO,mBAAoB4D,MAAO,oBACpC,CAAE5D,MAAO,UAAW4D,MAAO,WAC3B,CAAE5D,MAAO,sBAAuB4D,MAAO,uBACvC,CAAE5D,MAAO,aAAc4D,MAAO,yBAC9B,CAAE5D,MAAO,SAAU4D,MAAO,UAC1B,CAAE5D,MAAO,QAAS4D,MAAO,UA6EbtE,MAAO0B,EAAO6G,OACdnE,KAAK,SACL1D,MAAOgC,KAAKlB,MAAM+G,OAClB/D,SAAU9B,KAAK8B,SACfD,KAAK,sBAGP,kBAAC,EAAD,CACEF,YAAY,UACZrE,MAAO0B,EAAOiF,QACdvC,KAAK,UACL1D,MAAOgC,KAAKlB,MAAMmF,QAClBnC,SAAU9B,KAAK8B,SACfD,KAAK,2CAGP,kBAAC,EAAD,CACEF,YAAY,UACZrE,MAAO0B,EAAOqH,QACd3E,KAAK,UACL1D,MAAOgC,KAAKlB,MAAMuH,QAClBvE,SAAU9B,KAAK8B,SACfD,KAAK,gCAGP,kBAAC,EAAD,CACEF,YAAY,WACZrE,MAAO0B,EAAO4G,SACdlE,KAAK,WACL1D,MAAOgC,KAAKlB,MAAM8G,SAClB9D,SAAU9B,KAAK8B,SACfD,KAAK,4CAGP,kBAAC,EAAD,CACEF,YAAY,SACZrE,MAAO0B,EAAO2G,OACdjE,KAAK,SACL1D,MAAOgC,KAAKlB,MAAM6G,OAClB7D,SAAU9B,KAAK8B,SACfD,KAAK,uDAGP,kBAAC,EAAD,CACEF,YAAY,iBACZrE,MAAO0B,EAAO+G,eACdrE,KAAK,iBACL1D,MAAOgC,KAAKlB,MAAMiH,eAClBjE,SAAU9B,KAAK8B,SACfD,KAAK,oEAGP,kBAAC,GAAD,CACEF,YAAY,MACZrE,MAAO0B,EAAO8G,IACdpE,KAAK,MACL1D,MAAOgC,KAAKlB,MAAMgH,IAClBhE,SAAU9B,KAAK8B,SACfD,KAAK,oCAGP,yBAAK3B,UAAU,QACb,4BACEM,QAAS,WACP,EAAK8B,UAAS,SAAAkE,GAAS,MAAK,CAC1Bd,qBAAsBc,EAAUd,yBAGpCjJ,KAAK,SACLyD,UAAU,iBAPZ,4BAWA,0BAAMA,UAAU,cAAhB,aAGDoG,EACD,2BACE7J,KAAK,SACLuB,MAAM,SACNuI,MAAM,yC,GAjRElF,aA0SXC,gBAPS,SAAAxC,GACtB,MAAO,CACLE,OAAQF,EAAME,OACdP,QAASK,EAAML,WAMjB,CAAEjB,gBAAeT,qBAFJuE,CAGbuB,YAAW4D,K,mOCjTPE,G,YACJ,WAAY5G,GAAQ,IAAD,8BACjB,4CAAMA,KAuBRoC,SAAW,SAAAtC,GACTA,EAAEC,iBACF,IAAMsC,E,2VAAM,IAAQ,EAAKtD,cAClBsD,EAAOpD,OACd,EAAKe,MAAM6G,cAAcxE,EAAQ,EAAKrC,MAAMrC,UA5B3B,EAgCnBoE,SAAW,SAAAjC,GACT,EAAKyC,SAAL,eAAiBzC,EAAE0C,OAAOb,KAAO7B,EAAE0C,OAAOvE,SAjCzB,EAqCnB6I,QAAU,WACR,EAAKvE,SAAS,CACZ8B,SAAU,EAAKtF,MAAMsF,QACrBrC,UAAW,EAAKjD,MAAMiD,YAtCxB,EAAKjD,MAAQ,CACXoF,MAAO,GACPD,QAAS,GACT2B,SAAU,GACVzB,KAAM,GACNhE,GAAI,GACJiE,SAAS,EACT0C,YAAa,GACb/E,UAAU,EACV/C,OAAQ,IAXO,E,uFAgBO2D,GAEpBA,EAAU3D,QACZgB,KAAKsC,SAAS,CAAEtD,OAAQ2D,EAAU3D,W,+BAwB5B,IACAA,EAAWgB,KAAKlB,MAAhBE,OACR,OACE,yBAAKkB,UAAU,0BACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMC,GAAG,aAAaD,UAAU,iBAAhC,WAGA,wBAAIA,UAAU,yBAAd,uBACA,uBAAGA,UAAU,oBAAb,yEAIA,2BAAOA,UAAU,gBAAjB,sBACA,0BAAMiC,SAAUnC,KAAKmC,UACnB,kBAAC,EAAD,CACER,YAAY,UACZrE,MAAO0B,EAAOiF,QACdvC,KAAK,UACL1D,MAAOgC,KAAKlB,MAAMmF,QAClBnC,SAAU9B,KAAK8B,WAGjB,kBAAC,EAAD,CACEH,YAAY,QACZrE,MAAO0B,EAAOkF,MACdxC,KAAK,QACL1D,MAAOgC,KAAKlB,MAAMoF,MAClBpC,SAAU9B,KAAK8B,WAEjB,kBAAC,EAAD,CACEH,YAAY,WACZrE,MAAO0B,EAAO4G,SACdlE,KAAK,WACL1D,MAAOgC,KAAKlB,MAAM8G,SAClB9D,SAAU9B,KAAK8B,WAEjB,yCACA,kBAAC,EAAD,CACErF,KAAK,OACLa,MAAO0B,EAAOmF,KACdzC,KAAK,OACL1D,MAAOgC,KAAKlB,MAAMqF,KAClBrC,SAAU9B,KAAK8B,WAEjB,uCACA,kBAAC,EAAD,CACErF,KAAK,OACLa,MAAO0B,EAAOmB,GACduB,KAAK,KACL1D,MAAOgC,KAAKlB,MAAMqB,GAClB2B,SAAU9B,KAAK8B,SACfC,SAAU/B,KAAKlB,MAAMiD,SAAW,WAAa,KAG/C,yBAAK7B,UAAU,mBACb,2BACEA,UAAU,mBACVzD,KAAK,WACLiF,KAAK,UACL1D,MAAOgC,KAAKlB,MAAMsF,QAClB2C,QAAS/G,KAAKlB,MAAMsF,QACpBtC,SAAU9B,KAAK6G,QACfzF,GAAG,YAEL,2BAAOlB,UAAU,mBAAmB8G,IAAI,WAAxC,gBAKF,kBAAC,GAAD,CACErF,YAAY,cACZrE,MAAO0B,EAAO8H,YACdpF,KAAK,cACL1D,MAAOgC,KAAKlB,MAAMgI,YAClBhF,SAAU9B,KAAK8B,SACfD,KAAK,yCAGP,2BACEpF,KAAK,SACLuB,MAAM,SACNkC,UAAU,0C,GAhIAmB,aAwJbC,gBAPS,SAAAxC,GACtB,MAAO,CACLE,OAAQF,EAAME,OACdP,QAASK,EAAML,WAMjB,CAAEmI,ctBxFyB,SAACK,EAASvJ,GAAV,OAAsB,SAAAd,GACjDT,IACGwB,KAAK,4BAA6BsJ,GAClC/J,MAAK,SAAAU,GAAQ,OAAIF,EAAQG,KAAK,iBAC9BR,OAAM,SAAAS,GACLlB,EAAS,CACPH,KDhFkB,aCiFlBC,QAASoB,EAAIF,SAASR,asB+EfkE,CAGbuB,YAAW8D,K,mOC3JPO,G,YACJ,WAAYnH,GAAQ,IAAD,8BACjB,4CAAMA,KAuBRoC,SAAW,SAAAtC,GACTA,EAAEC,iBACF,IAAMsC,E,2VAAM,IAAQ,EAAKtD,cAClBsD,EAAOpD,OACd,EAAKe,MAAMoH,aAAa/E,EAAQ,EAAKrC,MAAMrC,UA5B1B,EAgCnBoE,SAAW,SAAAjC,GACT,EAAKyC,SAAL,eAAiBzC,EAAE0C,OAAOb,KAAO7B,EAAE0C,OAAOvE,SAjCzB,EAqCnB6I,QAAU,WACR,EAAKvE,SAAS,CACZ8B,SAAU,EAAKtF,MAAMsF,QACrBrC,UAAW,EAAKjD,MAAMiD,YAtCxB,EAAKjD,MAAQ,CACX4F,OAAQ,GACRC,OAAQ,GACRyC,aAAc,GACdjD,KAAM,GACNhE,GAAI,GACJiE,SAAS,EACT0C,YAAa,GACb/E,UAAU,EACV/C,OAAQ,IAXO,E,uFAgBO2D,GAEpBA,EAAU3D,QACZgB,KAAKsC,SAAS,CAAEtD,OAAQ2D,EAAU3D,W,+BAwB5B,IACAA,EAAWgB,KAAKlB,MAAhBE,OACR,OACE,yBAAKkB,UAAU,0BACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMC,GAAG,aAAaD,UAAU,iBAAhC,WAGA,wBAAIA,UAAU,yBAAd,uBACA,uBAAGA,UAAU,oBAAb,yEAIA,2BAAOA,UAAU,gBAAjB,sBACA,0BAAMiC,SAAUnC,KAAKmC,UACnB,kBAAC,EAAD,CACER,YAAY,SACZrE,MAAO0B,EAAO0F,OACdhD,KAAK,SACL1D,MAAOgC,KAAKlB,MAAM4F,OAClB5C,SAAU9B,KAAK8B,WAGjB,kBAAC,EAAD,CACEH,YAAY,SACZrE,MAAO0B,EAAO2F,OACdjD,KAAK,SACL1D,MAAOgC,KAAKlB,MAAM6F,OAClB7C,SAAU9B,KAAK8B,WAEjB,kBAAC,EAAD,CACEH,YAAY,eACZrE,MAAO0B,EAAOoI,aACd1F,KAAK,eACL1D,MAAOgC,KAAKlB,MAAMsI,aAClBtF,SAAU9B,KAAK8B,WAEjB,yCACA,kBAAC,EAAD,CACErF,KAAK,OACLa,MAAO0B,EAAOmF,KACdzC,KAAK,OACL1D,MAAOgC,KAAKlB,MAAMqF,KAClBrC,SAAU9B,KAAK8B,WAEjB,uCACA,kBAAC,EAAD,CACErF,KAAK,OACLa,MAAO0B,EAAOmB,GACduB,KAAK,KACL1D,MAAOgC,KAAKlB,MAAMqB,GAClB2B,SAAU9B,KAAK8B,SACfC,SAAU/B,KAAKlB,MAAMiD,SAAW,WAAa,KAG/C,yBAAK7B,UAAU,mBACb,2BACEA,UAAU,mBACVzD,KAAK,WACLiF,KAAK,UACL1D,MAAOgC,KAAKlB,MAAMsF,QAClB2C,QAAS/G,KAAKlB,MAAMsF,QACpBtC,SAAU9B,KAAK6G,QACfzF,GAAG,YAEL,2BAAOlB,UAAU,mBAAmB8G,IAAI,WAAxC,gBAKF,kBAAC,GAAD,CACErF,YAAY,cACZrE,MAAO0B,EAAO8H,YACdpF,KAAK,cACL1D,MAAOgC,KAAKlB,MAAMgI,YAClBhF,SAAU9B,KAAK8B,SACfD,KAAK,yCAGP,2BACEpF,KAAK,SACLuB,MAAM,SACNkC,UAAU,0C,GAhIDmB,aAwJZC,gBAPS,SAAAxC,GACtB,MAAO,CACLE,OAAQF,EAAME,OACdP,QAASK,EAAML,WAMjB,CAAE0I,avB3EwB,SAACF,EAASvJ,GAAV,OAAsB,SAAAd,GAChDT,IACGwB,KAAK,2BAA4BsJ,GACjC/J,MAAK,SAAAU,GAAQ,OAAIF,EAAQG,KAAK,iBAC9BR,OAAM,SAAAS,GACLlB,EAAS,CACPH,KD7FkB,aC8FlBC,QAASoB,EAAIF,SAASR,auBkEfkE,CAGbuB,YAAWqE,KCpHEG,G,iLAzCH,IACA5I,EAAYuB,KAAKD,MAAjBtB,QAER,OACE,yBAAKyB,UAAU,gCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,iBAAiBO,IAAKhC,EAAQD,KAAKkC,QAASC,IAAI,MAEjE,yBAAKT,UAAU,2BACb,4BAAKzB,EAAQD,KAAKgE,UAClB,2BACG/D,EAAQoH,OACR9H,EAAQU,EAAQwF,SAAW,KAA3B,cAAyCxF,EAAQwF,UAEpD,2BAAIlG,EAAQU,EAAQmH,UAAY,KAA5B,YAAwCnH,EAAQmH,YAKtD,yBAAK1F,UAAU,wBACb,yCACA,wBAAIA,UAAU,cACXzB,EAAQkH,OAAO2B,MAAM,KAAKzD,KAAI,SAAC0D,EAAOxD,GAAR,OAC7B,wBAAIC,IAAKD,EAAO7D,UAAU,mBACxB,uBAAGA,UAAU,qBACZqH,c,GA3BQlG,aCErBmG,G,4LAEFxH,KAAKD,MAAM0H,gB,+BAGH,IAGJC,EAHG,EACuB1H,KAAKD,MAAMtB,QAAjCC,EADD,EACCA,SAAUC,EADX,EACWA,QA0BlB,OArBE+I,EADe,OAAbhJ,GAAqBC,EAErB,yBAAKuB,UAAU,eACb,yBAAKA,UAAU,8BAA8BmD,KAAK,UAChD,0BAAMnD,UAAU,WAAhB,gBAKW,OAAbxB,GAAqBA,EAASN,OAAS,EAI1BM,EAASmF,KAAI,SAAApF,GAAO,OACjC,kBAAC,GAAD,CAAcuF,IAAKvF,EAAQ2C,GAAI3C,QAASA,OAI3B,gDAKjB,yBAAKyB,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,yBAAd,sBACA,uBAAGA,UAAU,oBAAb,sCAGCwH,U,GAzCOrG,aA8DPC,gBANS,SAAAxC,GACtB,MAAO,CACLL,QAASK,EAAML,WAMjB,CAAEgJ,YzBiEuB,kBAAM,SAAA7K,GAC/BA,EAASI,KACTb,IACGc,IAAI,sBACJC,MAAK,SAAAC,GAAG,OAAIP,EAAS,CAAEH,KDtIA,eCsIoBC,QAASS,EAAIC,UACxDC,OAAM,SAAAC,GAAK,OACVV,EAAS,CACPH,KD7ImB,cC8InBC,QAAS,ayB3EF4E,CAGbkG,IC9DIG,ICRqCtG,YCAhBA,YCAgBA,YCAjBA,Y,4LJUlBrB,KAAKD,MAAM6H,MAAMC,OAAO9C,QAC1B/E,KAAKD,MAAM+H,mBAAmB9H,KAAKD,MAAM6H,MAAMC,OAAO9C,U,+BAIxD,OAAO,kC,GAPY1D,cAuBRC,gBANS,SAAAxC,GACtB,MAAO,CACLL,QAASK,EAAML,WAMjB,CAAEqJ,mB1BmH8B,SAAA/C,GAAM,OAAI,SAAAnI,GAC1CA,EAASI,KACTyG,QAAQC,IAAI,eACZvH,IACGc,IAAI,UAAY8H,GAChB7H,MAAK,SAAAC,GAAG,OAAIP,EAAS,CAAEH,KDzJD,cCyJoBC,QAASS,EAAIC,UACvDC,OAAM,SAAAC,GAAK,OACVV,EAAS,CACPH,KD5JmB,cC6JnBC,QAAS,a0B9HF4E,CAGbqG,I,SKVarG,gBANS,SAAAxC,GACtB,MAAO,CACLD,KAAMC,EAAMD,QAIDyC,EAtBM,SAAC,GAAD,IAAcD,EAAd,EAAG0G,UAAsBlJ,EAAzB,EAAyBA,KAASmJ,EAAlC,4CACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAlI,GAAK,OACc,IAAzBlB,EAAKN,gBACH,kBAAC8C,EAActB,GAEf,kBAAC,IAAD,CAAUI,GAAG,kBCerB,GAAItD,aAAY,SAAc,CAE5BZ,EAAaY,aAAaqL,UAG1B,IAAM1L,GAAU2G,IAAWtG,aAAaqL,UAGxC/I,EAAMvC,SAASL,EAAeC,KAG9B,IAAM2L,GAAcC,KAAKC,MAAQ,IAE7B7L,GAAQsH,IAAMqE,KAEhBhJ,EAAMvC,SAASD,KAGfwC,EAAMvC,ShCTD,CACLH,KD/BiC,0BiCyCjC+C,OAAOoG,SAAS0C,KAAO,UAmDZC,OA/Cf,WACE,OACE,kBAAC,IAAD,CAAUpJ,MAAOA,GACf,kBAAC,IAAD,KACE,yBAAKe,UAAU,OACb,kBAAC,EAAD,MAEA,kBAAC,IAAD,CAAOsI,OAAK,EAACC,KAAK,YAAYV,UAAW7F,IACzC,kBAAC,IAAD,CAAOsG,OAAK,EAACC,KAAK,SAASV,UAAWjF,KACtC,kBAAC,IAAD,CAAO0F,OAAK,EAACC,KAAK,YAAYV,UAAWP,KACzC,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,mBAAmBV,UAAWJ,KAEhD,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAca,OAAK,EAACC,KAAK,aAAaV,UAAWnD,MAEnD,kBAAC,IAAD,KACE,kBAAC,GAAD,CACE4D,OAAK,EACLC,KAAK,kBACLV,UAAWtC,MAGf,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAc+C,OAAK,EAACC,KAAK,gBAAgBV,UAAWtB,MAEtD,kBAAC,IAAD,KACE,kBAAC,GAAD,CACE+B,OAAK,EACLC,KAAK,kBACLV,UAAWpB,MAGf,kBAAC,IAAD,KACE,kBAAC,GAAD,CACE6B,OAAK,EACLC,KAAK,iBACLV,UAAWb,MAGf,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,IAAIV,UAAWvG,IACjC,kBAAC,EAAD,UC9EUkH,QACW,cAA7BlJ,OAAOoG,SAAS+C,UAEe,UAA7BnJ,OAAOoG,SAAS+C,UAEhBnJ,OAAOoG,SAAS+C,SAASf,MACvB,2DCZNgB,IAASX,OAAO,kBAAC,GAAD,MAASY,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/L,MAAK,SAAAgM,GACjCA,EAAaC,kB","file":"static/js/main.c74690a4.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n  //  check if the token exist\r\n  if (token) {\r\n    // set default header\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // delete the token\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\n\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"api/v1/user/register\", userData)\r\n    .then(response => history.push(\"/login\"))\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n\r\n// action for login\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"api/v1/user/login\", userData)\r\n    .then(response => {\r\n      //  get the token\r\n      const { token } = response.data;\r\n\r\n      // set it to the local storage\r\n      localStorage.setItem(\"jwtToken\", token);\r\n\r\n      // add the token to the authorization header\r\n      setAuthToken(token);\r\n\r\n      // Decode the token\r\n      const decode = jwt_decode(token);\r\n\r\n      // set current user\r\n      dispatch(setCurrentUser(decode));\r\n    })\r\n    .catch(err => dispatch({ type: GET_ERRORS, payload: err.response.data }));\r\n};\r\n\r\n// updates the current user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// Logout the current user\r\nexport const logOutUser = () => dispatch => {\r\n  //  remove the localstorage token\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // remove the authorization header  for future requrst\r\n  setAuthToken(false);\r\n  // update the current user\r\n  dispatch(setCurrentUser({}));\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const GET_PROFILE = \"GET_PROFILE\";\r\nexport const PROFILE_LOADING = \"PROFILE_LOADING\";\r\nexport const PROFILE_NOT_FOUND = \"PROFILE_NOT_FOUND\";\r\nexport const CLEAR_CURRENT_PROFILE = \"CLEAR_CURRENT_PROFILE\";\r\nexport const GET_PROFILES = \"GET_PROFILES\";\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  PROFILE_LOADING,\r\n  GET_ERRORS,\r\n  CLEAR_CURRENT_PROFILE,\r\n  SET_CURRENT_USER,\r\n  GET_PROFILES\r\n} from \"./types\";\r\n\r\n// This function gets a specific user\r\nexport const getCurrentProfile = () => dispatch => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get(\"api/v1/profile\")\r\n    .then(res => dispatch({ type: GET_PROFILE, payload: res.data }))\r\n    .catch(error =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: {}\r\n      })\r\n    );\r\n};\r\n\r\n// This function sets the profile loading\r\nexport const setProfileLoading = () => {\r\n  return {\r\n    type: PROFILE_LOADING\r\n  };\r\n};\r\n\r\n// This function clears the profile object\r\n// This is called when the user logs out\r\nexport const clearCurrentProfile = () => {\r\n  return {\r\n    type: CLEAR_CURRENT_PROFILE\r\n  };\r\n};\r\n\r\n// This method is called whe a customer is trying to create a profile\r\nexport const createProfile = (profileData, history) => dispatch => {\r\n  axios\r\n    .post(\"api/v1/profile\", profileData)\r\n    .then(response => history.push(\"/dashboard\"))\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n\r\n// This method is called whe a customer is trying to delete a profile\r\nexport const deleteAction = () => dispatch => {\r\n  if (window.confirm(\"Are you sure you want to delete this account\")) {\r\n    axios\r\n      .delete(\"api/v1/profile\")\r\n      .then(response =>\r\n        dispatch({\r\n          type: SET_CURRENT_USER,\r\n          payload: {}\r\n        })\r\n      )\r\n      .catch(err => {\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        });\r\n      });\r\n  }\r\n};\r\n\r\n// This method is used to add experience\r\nexport const addExperience = (expData, history) => dispatch => {\r\n  axios\r\n    .post(\"api/v1/profile/experience\", expData)\r\n    .then(response => history.push(\"/dashboard\"))\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n\r\n// This method is used to add experience\r\nexport const addEducation = (expData, history) => dispatch => {\r\n  axios\r\n    .post(\"api/v1/profile/education\", expData)\r\n    .then(response => history.push(\"/dashboard\"))\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n\r\n// This method is used to delete on  experience\r\nexport const deleteExperience = id => dispatch => {\r\n  axios\r\n    .delete(`api/v1/profile/experience/${id}`)\r\n    .then(response =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: response.data\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n\r\n// This method is used to delete on  experience\r\nexport const deleteEducation = id => dispatch => {\r\n  axios\r\n    .delete(`api/v1/profile/education/${id}`)\r\n    .then(response =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: response.data\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n\r\n// This function gets all profiles\r\nexport const getProfiles = () => dispatch => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get(\"api/v1/profile/all\")\r\n    .then(res => dispatch({ type: GET_PROFILES, payload: res.data }))\r\n    .catch(error =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: null\r\n      })\r\n    );\r\n};\r\n\r\n// This function gets a specific user profile by handle\r\nexport const getProfileByHandle = handle => dispatch => {\r\n  dispatch(setProfileLoading());\r\n  console.log(\"all the way\");\r\n  axios\r\n    .get(\"api/v1/\" + handle)\r\n    .then(res => dispatch({ type: GET_PROFILE, payload: res.data }))\r\n    .catch(error =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: null\r\n      })\r\n    );\r\n};\r\n","const isEmpty = value => {\r\n  if (\r\n    value === undefined ||\r\n    value === null ||\r\n    (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n    (typeof value === \"string\" && value.trim().length === 0)\r\n  ) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default isEmpty;\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\nimport isEmpty from \"../utils/is-empty\";\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  PROFILE_LOADING,\r\n  CLEAR_CURRENT_PROFILE,\r\n  GET_PROFILES\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: null,\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case PROFILE_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case GET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: action.payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_CURRENT_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  profile: profileReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : f => f\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { logOutUser } from \"../../actions/authActions\";\r\nimport { clearCurrentProfile } from \"../../actions/profileActions\";\r\n\r\nclass Navbar extends Component {\r\n  onLogOutClick = e => {\r\n    e.preventDefault();\r\n\r\n    // This method logs out the user\r\n    this.props.logOutUser();\r\n\r\n    // This method clears the current profile\r\n    this.props.clearCurrentProfile();\r\n  };\r\n\r\n  render() {\r\n    const { isAuthenticated, user } = this.props.auth;\r\n\r\n    const authLinks = (\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item mt-2\">\r\n          <Link\r\n            to=\"/dashboard\"\r\n            style={{\r\n              color: \"#fff\",\r\n              marginRight: \"20px\",\r\n              textDecoration: \"none\"\r\n            }}\r\n          >\r\n            Dashboard\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <button onClick={this.onLogOutClick}>\r\n            <img\r\n              src={user.picture}\r\n              alt=\"Profile pics\"\r\n              style={{\r\n                width: \"35px\",\r\n                height: \"35px\",\r\n                borderRadius: \"50%\",\r\n                marginRight: \"5px\",\r\n                border: \"none\",\r\n                backgroundColor: \"#343a40\",\r\n                color: \"#fff\"\r\n              }}\r\n            />\r\n            Logout\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    );\r\n\r\n    const geustLinks = (\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/register\">\r\n            Sign Up\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/login\">\r\n            Login\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            DevConnector\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/profiles\">\r\n                  {\" \"}\r\n                  Developers\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            {isAuthenticated ? authLinks : geustLinks}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nNavbar.propTypes = {\r\n  logOutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth,\r\n    errors: state.errors\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logOutUser, clearCurrentProfile }\r\n)(Navbar);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <p>&copy; Copyright Reserved Devconnector Inc.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    // redirect if the person is logged in\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"dark-overlay landing-inner text-light\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Developer Connector</h1>\r\n                <p className=\"lead\">\r\n                  {\" \"}\r\n                  Create a developer profile/portfolio, share posts and get help\r\n                  from other developers\r\n                </p>\r\n                <hr />\r\n                <Link to=\"register\" className=\"btn btn-lg btn-info mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-light\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Landing);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextFieldGroups = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  label,\r\n  error,\r\n  info,\r\n  type,\r\n  onChange,\r\n  disabled\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type={type}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n      {info && <div className=\"form-text text-muted\">{info}</div>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextFieldGroups.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  disabled: PropTypes.string\r\n};\r\n\r\nTextFieldGroups.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextFieldGroups;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport TextFieldGroups from \"../../commons/TextFieldGroups\";\r\n\r\nclass Register extends Component {\r\n  // construnctor\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullname: \"\",\r\n      email: \"\",\r\n      picture: \"\",\r\n      password: \"\",\r\n\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  // onsubmit method\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newObj = { ...this.state };\r\n\r\n    delete newObj.errors;\r\n\r\n    this.props.registerUser(newObj, this.props.history);\r\n  };\r\n\r\n  // on change function\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // redirect if the person is logged in\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register card mt-5 mb-5\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">\r\n                Create your DevConnector account\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroups\r\n                  type=\"text\"\r\n                  placeholder=\"Fullname\"\r\n                  error={errors.fullname}\r\n                  name=\"fullname\"\r\n                  value={this.state.fullname}\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <TextFieldGroups\r\n                  type=\"email\"\r\n                  placeholder=\"email\"\r\n                  error={errors.email}\r\n                  name=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <TextFieldGroups\r\n                  type=\"text\"\r\n                  placeholder=\"picture\"\r\n                  error={errors.picture}\r\n                  name=\"picture\"\r\n                  value={this.state.picture}\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <TextFieldGroups\r\n                  type=\"password\"\r\n                  placeholder=\"password\"\r\n                  error={errors.password}\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth,\r\n    errors: state.errors\r\n  };\r\n};\r\n\r\n// mapDispatchToProps = (dispatch) => {\r\n//   return {}\r\n// }\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Register));\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport TextFieldGroups from \"../../commons/TextFieldGroups\";\r\nclass Login extends Component {\r\n  // construnctor\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  // onsubmit method\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newObj = { ...this.state };\r\n    delete newObj.errors;\r\n    this.props.loginUser(newObj);\r\n  };\r\n\r\n  // on change function\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // redirect if the person is logged in\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // redirect to the dashboard the initial time after login\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <p className=\"lead text-center\">\r\n                Sign in to your DevConnector account\r\n              </p>\r\n\r\n              {errors.message && (\r\n                <p className=\"text-center text-danger\">{errors.message}</p>\r\n              )}\r\n\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroups\r\n                  type=\"email\"\r\n                  placeholder=\"Email Address\"\r\n                  error={errors.email}\r\n                  name=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <TextFieldGroups\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  error={errors.password}\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth,\r\n    errors: state.errors\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ProfileAction extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"btn-group mb-4\" role=\"group\">\r\n        <Link to=\"/edit-profile\" className=\"btn btn-light\">\r\n          <i className=\"fa fa-user-circle text-info mr-1\"></i> Edit Profile\r\n        </Link>\r\n        <Link to=\"/add-experience\" className=\"btn btn-light\">\r\n          <i className=\"fa fa-black-tie text-info mr-1\"></i>\r\n          Add Experience\r\n        </Link>\r\n        <Link to=\"/add-education\" className=\"btn btn-light\">\r\n          <i className=\"fa fa-graduation-cap text-info mr-1\"></i>\r\n          Add Education\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileAction;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteExperience } from \"../../actions/profileActions\";\r\n\r\nclass Experience extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteExperience(id);\r\n  };\r\n\r\n  render() {\r\n    console.log();\r\n\r\n    const experience = Object.values(this.props.experience).map(\r\n      (exp, index) => (\r\n        <tr key={exp.id}>\r\n          <td>{exp.company}</td>\r\n          <td>{exp.title}</td>\r\n          <td>\r\n            {exp.from} - {exp.current ? \"Now\" : exp.to}\r\n          </td>\r\n          <td>\r\n            <button\r\n              onClick={() => this.onDeleteClick(exp.id)}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      )\r\n    );\r\n    return (\r\n      <div>\r\n        <h4>Experience Credentials</h4>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <th>Company</th>\r\n            <th>Title</th>\r\n            <th>Year</th>\r\n            <th></th>\r\n          </thead>\r\n\r\n          {experience}\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nExperience.propTypes = {\r\n  // profile: PropTypes.object.isRequired,\r\n  // errors: PropTypes.object.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    //   errors: state.errors,\r\n    //   profile: state.profile\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { deleteExperience }\r\n)(Experience);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteEducation } from \"../../actions/profileActions\";\r\n\r\nclass Education extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteEducation(id);\r\n  };\r\n\r\n  render() {\r\n    console.log();\r\n\r\n    const education = Object.values(this.props.education).map(edu => (\r\n      <tr key={edu.id}>\r\n        <td>{edu.school}</td>\r\n        <td>{edu.degree}</td>\r\n        <td>\r\n          {edu.from} - {edu.current ? \"Now\" : edu.to}\r\n        </td>\r\n        <td>\r\n          <button\r\n            onClick={() => this.onDeleteClick(edu.id)}\r\n            className=\"btn btn-danger\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n    return (\r\n      <div>\r\n        <h4>Education Credentials</h4>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <th>School</th>\r\n            <th>Degree</th>\r\n            <th>Year</th>\r\n            <th></th>\r\n          </thead>\r\n\r\n          {education}\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEducation.propTypes = {\r\n  // profile: PropTypes.object.isRequired,\r\n  // errors: PropTypes.object.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    //   errors: state.errors,\r\n    //   profile: state.profile\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { deleteEducation }\r\n)(Education);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentProfile, deleteAction } from \"../../actions/profileActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProfileAction from \"./ProfileAction\";\r\nimport Experience from \"./Experience\";\r\nimport Education from \"./Education\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getCurrentProfile();\r\n  }\r\n\r\n  onDeleteClick = e => {\r\n    e.preventDefault();\r\n    this.props.deleteAction();\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    const { profile, loading } = this.props.profile;\r\n    let dashboardContent;\r\n\r\n    if (profile === null && loading) {\r\n      dashboardContent = (\r\n        <div className=\"text-center\">\r\n          <div className=\"spinner-border text-primary\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      //  check if the user already has a profile\r\n      if (profile != null && Object.keys(profile).length > 0) {\r\n        dashboardContent = (\r\n          <div>\r\n            <p className=\"lead text-muted\">\r\n              Welcome{\" \"}\r\n              <Link to={`/profile/${profile.handle} `}>{user.fullname}</Link>\r\n            </p>\r\n            <ProfileAction />\r\n            {profile.experience !== null ? (\r\n              <Experience experience={profile.experience} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {profile.education !== null ? (\r\n              <Education education={profile.education} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {/*  */}\r\n            <div className={{ marginBottom: \"60px\" }} />\r\n            <button onClick={this.onDeleteClick} className=\"btn btn-danger\">\r\n              Delete My Account\r\n            </button>\r\n          </div>\r\n        );\r\n      } else {\r\n        dashboardContent = (\r\n          <div>\r\n            <p className=\"lead text-muted\">Welcome {user.fullname}</p>\r\n            <p>You have not yet set up a profile, please add some info</p>\r\n            <Link to=\"create-profile\" className=\"btn btn-lg btn-info\">\r\n              Create Profile\r\n            </Link>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <h4 className=\"display-4\">Dashboard</h4>\r\n            {dashboardContent}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAction: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth,\r\n    profile: state.profile\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getCurrentProfile, deleteAction }\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst InputGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  icon,\r\n  error,\r\n  info,\r\n  type,\r\n  onChange,\r\n  disabled\r\n}) => {\r\n  return (\r\n    <div className=\"input-group mb-3\">\r\n      <div className=\"input-group-prepend\">\r\n        <span className=\"input-group-text\">\r\n          <i className={icon}></i>\r\n        </span>\r\n      </div>\r\n\r\n      <input\r\n        type={type}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  icon: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  disabled: PropTypes.string\r\n};\r\n\r\nInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default InputGroup;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextAreaFieldGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  info,\r\n  onChange\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <textarea\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {info && <div className=\"form-text text-muted\">{info}</div>}\r\n\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextAreaFieldGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TextAreaFieldGroup;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst SelectListGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  info,\r\n  onChange,\r\n  options\r\n}) => {\r\n  const selectOptions = options.map(option => (\r\n    <option key={option.label} value={option.value}>\r\n      {option.label}\r\n    </option>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <select\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      >\r\n        {selectOptions}\r\n      </select>\r\n      {info && <div className=\"form-text text-muted\">{info}</div>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectListGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  options: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SelectListGroup;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport TextFieldGroups from \"../../commons/TextFieldGroups\";\r\nimport InputGroup from \"../../commons/InputGroup\";\r\nimport TextAreaFieldGroup from \"../../commons/TextAreaFieldGroup\";\r\nimport SelectListGroup from \"../../commons/SelectListGroup\";\r\nimport { createProfile } from \"../../actions/profileActions\";\r\n\r\nclass CreateProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displaySocialInputs: false,\r\n      skills: \"\",\r\n      handle: \"\",\r\n      company: \"\",\r\n      location: \"\",\r\n      status: \"\",\r\n      bio: \"\",\r\n      githubusername: \"\",\r\n      youtube: null,\r\n      twitter: null,\r\n      facebook: null,\r\n      linkedin: null,\r\n      instagram: null,\r\n      website: null,\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  // This ccomponent updates the errors in the state\r\n  componentWillReceiveProps(nextProps) {\r\n    // updates the errors in the state\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // onsubmit method\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newObj = { ...this.state };\r\n    delete newObj.errors;\r\n    this.props.createProfile(newObj, this.props.history);\r\n  };\r\n\r\n  // on change function\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { errors, displaySocialInputs } = this.state;\r\n\r\n    const options = [\r\n      { value: \"0\", label: \"* Select Professional Status\" },\r\n      { value: \"Developer\", label: \"Developer\" },\r\n      { value: \"Junior Developer\", label: \"Junior Developer\" },\r\n      { value: \"Senior Developer\", label: \"Senior Developer\" },\r\n      { value: \"Manager\", label: \"Manager\" },\r\n      { value: \"Student or Learning\", label: \"Student or Learning\" },\r\n      { value: \"Instructor\", label: \"Instructor or Teacher\" },\r\n      { value: \"Intern\", label: \"Intern\" },\r\n      { value: \"Other\", label: \"Other\" }\r\n    ];\r\n\r\n    let socialInputs;\r\n\r\n    if (displaySocialInputs) {\r\n      socialInputs = (\r\n        <div>\r\n          <InputGroup\r\n            placeholder=\"Twitter Profile Url\"\r\n            error={errors.twitter}\r\n            name=\"twitter\"\r\n            value={this.state.twitter}\r\n            onChange={this.onChange}\r\n            icon=\"fa fa-twitter\"\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"instagram Profile Url\"\r\n            error={errors.instagram}\r\n            name=\"instagram\"\r\n            value={this.state.instagram}\r\n            onChange={this.onChange}\r\n            icon=\"fa fa-instagram\"\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"facebook Profile Url\"\r\n            error={errors.facebook}\r\n            name=\"facebook\"\r\n            value={this.state.facebook}\r\n            onChange={this.onChange}\r\n            icon=\"fa fa-facebook\"\r\n          />\r\n          <InputGroup\r\n            placeholder=\"linkedin Profile Url\"\r\n            error={errors.linkedin}\r\n            name=\"linkedin\"\r\n            value={this.state.linkedin}\r\n            onChange={this.onChange}\r\n            icon=\"fa fa-linkedin\"\r\n          />\r\n          <InputGroup\r\n            placeholder=\"youtube Profile Url\"\r\n            error={errors.youtube}\r\n            name=\"youtube\"\r\n            value={this.state.youtube}\r\n            onChange={this.onChange}\r\n            icon=\"fa fa-youtube\"\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div class=\"create-profile\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-8 m-auto\">\r\n              <Link to=\"/dashboard\" class=\"btn btn-light\">\r\n                Go Back\r\n              </Link>\r\n              <h1 class=\"display-4 text-center\">Create Your Profile</h1>\r\n              <p class=\"lead text-center\">\r\n                Let's get some information to make your profile stand out\r\n              </p>\r\n              <small class=\"d-block pb-3\">* = required field</small>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroups\r\n                  placeholder=\"handle *\"\r\n                  error={errors.handle}\r\n                  name=\"handle\"\r\n                  value={this.state.handle}\r\n                  onChange={this.onChange}\r\n                  info=\"This handle is unique for your profile url\"\r\n                />\r\n\r\n                <SelectListGroup\r\n                  options={options}\r\n                  error={errors.status}\r\n                  name=\"status\"\r\n                  value={this.state.status}\r\n                  onChange={this.onChange}\r\n                  info=\"Your career level\"\r\n                />\r\n\r\n                <TextFieldGroups\r\n                  placeholder=\"company\"\r\n                  error={errors.company}\r\n                  name=\"company\"\r\n                  value={this.state.company}\r\n                  onChange={this.onChange}\r\n                  info=\"your company or the one you worked for\"\r\n                />\r\n\r\n                <TextFieldGroups\r\n                  placeholder=\"website\"\r\n                  error={errors.website}\r\n                  name=\"website\"\r\n                  value={this.state.website}\r\n                  onChange={this.onChange}\r\n                  info=\"your website or company own\"\r\n                />\r\n\r\n                <TextFieldGroups\r\n                  placeholder=\"location\"\r\n                  error={errors.location}\r\n                  name=\"location\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChange}\r\n                  info=\"city or city and state (eg Enugu , Nsk)\"\r\n                />\r\n\r\n                <TextFieldGroups\r\n                  placeholder=\"skills\"\r\n                  error={errors.skills}\r\n                  name=\"skills\"\r\n                  value={this.state.skills}\r\n                  onChange={this.onChange}\r\n                  info=\"Please use comma seperated values (eg html,php,js)\"\r\n                />\r\n\r\n                <TextFieldGroups\r\n                  placeholder=\"githubusername\"\r\n                  error={errors.githubusername}\r\n                  name=\"githubusername\"\r\n                  value={this.state.githubusername}\r\n                  onChange={this.onChange}\r\n                  info=\"if you want latest repo and a github link include your username\"\r\n                />\r\n\r\n                <TextAreaFieldGroup\r\n                  placeholder=\"bio\"\r\n                  error={errors.bio}\r\n                  name=\"bio\"\r\n                  value={this.state.bio}\r\n                  onChange={this.onChange}\r\n                  info=\"tell us a little about yourself\"\r\n                />\r\n\r\n                <div className=\"mb-3\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState(prevState => ({\r\n                        displaySocialInputs: !prevState.displaySocialInputs\r\n                      }));\r\n                    }}\r\n                    type=\"button\"\r\n                    className=\"btn btn-light\"\r\n                  >\r\n                    Add Social Network Links\r\n                  </button>\r\n                  <span className=\"text-muted\">Optional</span>\r\n                </div>\r\n\r\n                {socialInputs}\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"submit\"\r\n                  class=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCreateProfile.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  createProfile: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    errors: state.errors,\r\n    profile: state.profile\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProfile }\r\n)(withRouter(CreateProfile));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport TextFieldGroups from \"../../commons/TextFieldGroups\";\r\nimport InputGroup from \"../../commons/InputGroup\";\r\nimport TextAreaFieldGroup from \"../../commons/TextAreaFieldGroup\";\r\nimport SelectListGroup from \"../../commons/SelectListGroup\";\r\nimport { createProfile, getCurrentProfile } from \"../../actions/profileActions\";\r\nimport isEmpty from \"../../utils/is-empty\";\r\n\r\nclass EditProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displaySocialInputs: false,\r\n      skills: \"\",\r\n      handle: \"\",\r\n      company: \"\",\r\n      location: \"\",\r\n      status: \"\",\r\n      bio: \"\",\r\n      githubusername: \"\",\r\n      youtube: null,\r\n      twitter: null,\r\n      facebook: null,\r\n      linkedin: null,\r\n      instagram: null,\r\n      website: null,\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getCurrentProfile();\r\n  }\r\n\r\n  // This ccomponent updates the errors in the state\r\n  componentWillReceiveProps(nextProps) {\r\n    // updates the errors in the state\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    // This is where the profile edit  form will updated\r\n    if (nextProps.profile.profile) {\r\n      const { profile } = nextProps.profile;\r\n\r\n      // set the profile object\r\n\r\n      //   profileFields.social = {};\r\n      if (profile.social) {\r\n        this.setState({\r\n          displaySocialInputs: true\r\n        });\r\n      }\r\n      // collect all the details\r\n      profile.social = isEmpty(profile.social) ? {} : profile.social;\r\n      profile.website = isEmpty(profile.website) ? null : profile.website;\r\n      profile.handle = isEmpty(profile.handle) ? \"\" : profile.handle;\r\n      profile.company = isEmpty(profile.company) ? \"\" : profile.company;\r\n      profile.location = isEmpty(profile.location) ? \"\" : profile.location;\r\n      profile.status = isEmpty(profile.status) ? \"\" : profile.status;\r\n      profile.bio = isEmpty(profile.bio) ? \"\" : profile.bio;\r\n      profile.skills = isEmpty(profile.skills) ? \"\" : profile.skills;\r\n      profile.githubusername = isEmpty(profile.githubusername)\r\n        ? \"\"\r\n        : profile.githubusername;\r\n      profile.social.youtube = isEmpty(profile.social.youtube)\r\n        ? null\r\n        : profile.social.youtube;\r\n      profile.social.linkedin = isEmpty(profile.social.linkedin)\r\n        ? null\r\n        : profile.social.linkedin;\r\n      profile.social.twitter = isEmpty(profile.social.twitter)\r\n        ? null\r\n        : profile.social.twitter;\r\n      profile.social.instagram = isEmpty(profile.social.instagram)\r\n        ? null\r\n        : profile.social.instagram;\r\n      profile.social.facebook = isEmpty(profile.social.facebook)\r\n        ? null\r\n        : profile.social.facebook;\r\n\r\n      this.setState({\r\n        skills: profile.skills,\r\n        handle: profile.handle,\r\n        company: profile.company,\r\n        location: profile.location,\r\n        status: profile.status,\r\n        bio: profile.bio,\r\n        githubusername: profile.githubusername,\r\n        youtube: profile.social.youtube,\r\n        twitter: profile.social.twitter,\r\n        facebook: profile.social.facebook,\r\n        linkedin: profile.social.linkedin,\r\n        instagram: profile.social.instagram,\r\n        website: profile.social.website\r\n      });\r\n    }\r\n  }\r\n\r\n  // onsubmit method\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newObj = { ...this.state };\r\n    delete newObj.errors;\r\n    this.props.createProfile(newObj, this.props.history);\r\n  };\r\n\r\n  // on change function\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { errors, displaySocialInputs } = this.state;\r\n\r\n    const options = [\r\n      { value: \"0\", label: \"* Select Professional Status\" },\r\n      { value: \"Developer\", label: \"Developer\" },\r\n      { value: \"Junior Developer\", label: \"Junior Developer\" },\r\n      { value: \"Senior Developer\", label: \"Senior Developer\" },\r\n      { value: \"Manager\", label: \"Manager\" },\r\n      { value: \"Student or Learning\", label: \"Student or Learning\" },\r\n      { value: \"Instructor\", label: \"Instructor or Teacher\" },\r\n      { value: \"Intern\", label: \"Intern\" },\r\n      { value: \"Other\", label: \"Other\" }\r\n    ];\r\n\r\n    let socialInputs;\r\n\r\n    if (displaySocialInputs) {\r\n      socialInputs = (\r\n        <div>\r\n          <InputGroup\r\n            placeholder=\"Twitter Profile Url\"\r\n            error={errors.twitter}\r\n            name=\"twitter\"\r\n            value={this.state.twitter}\r\n            onChange={this.onChange}\r\n            icon=\"fa fa-twitter\"\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"instagram Profile Url\"\r\n            error={errors.instagram}\r\n            name=\"instagram\"\r\n            value={this.state.instagram}\r\n            onChange={this.onChange}\r\n            icon=\"fa fa-instagram\"\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"facebook Profile Url\"\r\n            error={errors.facebook}\r\n            name=\"facebook\"\r\n            value={this.state.facebook}\r\n            onChange={this.onChange}\r\n            icon=\"fa fa-facebook\"\r\n          />\r\n          <InputGroup\r\n            placeholder=\"linkedin Profile Url\"\r\n            error={errors.linkedin}\r\n            name=\"linkedin\"\r\n            value={this.state.linkedin}\r\n            onChange={this.onChange}\r\n            icon=\"fa fa-linkedin\"\r\n          />\r\n          <InputGroup\r\n            placeholder=\"youtube Profile Url\"\r\n            error={errors.youtube}\r\n            name=\"youtube\"\r\n            value={this.state.youtube}\r\n            onChange={this.onChange}\r\n            icon=\"fa fa-youtube\"\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div class=\"create-profile\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-8 m-auto\">\r\n              <Link to=\"/dashboard\" class=\"btn btn-light\">\r\n                Go Back\r\n              </Link>\r\n              <h1 class=\"display-4 text-center\">Edit Your Profile</h1>\r\n\r\n              <small class=\"d-block pb-3\">* = required field</small>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroups\r\n                  placeholder=\"handle *\"\r\n                  error={errors.handle}\r\n                  name=\"handle\"\r\n                  value={this.state.handle}\r\n                  onChange={this.onChange}\r\n                  info=\"This handle is unique for your profile url\"\r\n                />\r\n\r\n                <SelectListGroup\r\n                  options={options}\r\n                  error={errors.status}\r\n                  name=\"status\"\r\n                  value={this.state.status}\r\n                  onChange={this.onChange}\r\n                  info=\"Your career level\"\r\n                />\r\n\r\n                <TextFieldGroups\r\n                  placeholder=\"company\"\r\n                  error={errors.company}\r\n                  name=\"company\"\r\n                  value={this.state.company}\r\n                  onChange={this.onChange}\r\n                  info=\"your company or the one you worked for\"\r\n                />\r\n\r\n                <TextFieldGroups\r\n                  placeholder=\"website\"\r\n                  error={errors.website}\r\n                  name=\"website\"\r\n                  value={this.state.website}\r\n                  onChange={this.onChange}\r\n                  info=\"your website or company own\"\r\n                />\r\n\r\n                <TextFieldGroups\r\n                  placeholder=\"location\"\r\n                  error={errors.location}\r\n                  name=\"location\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChange}\r\n                  info=\"city or city and state (eg Enugu , Nsk)\"\r\n                />\r\n\r\n                <TextFieldGroups\r\n                  placeholder=\"skills\"\r\n                  error={errors.skills}\r\n                  name=\"skills\"\r\n                  value={this.state.skills}\r\n                  onChange={this.onChange}\r\n                  info=\"Please use comma seperated values (eg html,php,js)\"\r\n                />\r\n\r\n                <TextFieldGroups\r\n                  placeholder=\"githubusername\"\r\n                  error={errors.githubusername}\r\n                  name=\"githubusername\"\r\n                  value={this.state.githubusername}\r\n                  onChange={this.onChange}\r\n                  info=\"if you want latest repo and a github link include your username\"\r\n                />\r\n\r\n                <TextAreaFieldGroup\r\n                  placeholder=\"bio\"\r\n                  error={errors.bio}\r\n                  name=\"bio\"\r\n                  value={this.state.bio}\r\n                  onChange={this.onChange}\r\n                  info=\"tell us a little about yourself\"\r\n                />\r\n\r\n                <div className=\"mb-3\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState(prevState => ({\r\n                        displaySocialInputs: !prevState.displaySocialInputs\r\n                      }));\r\n                    }}\r\n                    type=\"button\"\r\n                    className=\"btn btn-light\"\r\n                  >\r\n                    Add Social Network Links\r\n                  </button>\r\n                  <span className=\"text-muted\">Optional</span>\r\n                </div>\r\n\r\n                {socialInputs}\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"submit\"\r\n                  class=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEditProfile.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    errors: state.errors,\r\n    profile: state.profile\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProfile, getCurrentProfile }\r\n)(withRouter(EditProfile));\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport TextFieldGroups from \"../../commons/TextFieldGroups\";\r\nimport TextAreaFieldGroup from \"../../commons/TextAreaFieldGroup\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addExperience } from \"../../actions/profileActions\";\r\n\r\nclass AddExperience extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      company: \"\",\r\n      location: \"\",\r\n      from: \"\",\r\n      to: \"\",\r\n      current: false,\r\n      description: \"\",\r\n      disabled: false,\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  // This ccomponent updates the errors in the state\r\n  componentWillReceiveProps(nextProps) {\r\n    // updates the errors in the state\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // onsubmit method\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newObj = { ...this.state };\r\n    delete newObj.errors;\r\n    this.props.addExperience(newObj, this.props.history);\r\n  };\r\n\r\n  // on change function\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // This method is called when checked\r\n  onCheck = () => {\r\n    this.setState({\r\n      current: !this.state.current,\r\n      disabled: !this.state.disabled\r\n    });\r\n  };\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"section add-experience\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to=\"/dashboard\" className=\"btn btn-light\">\r\n                Go Back\r\n              </Link>\r\n              <h1 className=\"display-4 text-center\">Add Your Experience</h1>\r\n              <p className=\"lead text-center\">\r\n                Add any developer/programming positions that you have had in the\r\n                past\r\n              </p>\r\n              <small className=\"d-block pb-3\">* = required field</small>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroups\r\n                  placeholder=\"Company\"\r\n                  error={errors.company}\r\n                  name=\"company\"\r\n                  value={this.state.company}\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <TextFieldGroups\r\n                  placeholder=\"title\"\r\n                  error={errors.title}\r\n                  name=\"title\"\r\n                  value={this.state.title}\r\n                  onChange={this.onChange}\r\n                />\r\n                <TextFieldGroups\r\n                  placeholder=\"location\"\r\n                  error={errors.location}\r\n                  name=\"location\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChange}\r\n                />\r\n                <h6>from date</h6>\r\n                <TextFieldGroups\r\n                  type=\"date\"\r\n                  error={errors.from}\r\n                  name=\"from\"\r\n                  value={this.state.from}\r\n                  onChange={this.onChange}\r\n                />\r\n                <h6>to date</h6>\r\n                <TextFieldGroups\r\n                  type=\"date\"\r\n                  error={errors.to}\r\n                  name=\"to\"\r\n                  value={this.state.to}\r\n                  onChange={this.onChange}\r\n                  disabled={this.state.disabled ? \"disabled\" : \"\"}\r\n                />\r\n\r\n                <div className=\"form-check mb-4\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    name=\"current\"\r\n                    value={this.state.current}\r\n                    checked={this.state.current}\r\n                    onChange={this.onCheck}\r\n                    id=\"current\"\r\n                  />\r\n                  <label className=\"form-check-label\" for=\"current\">\r\n                    Current Job\r\n                  </label>\r\n                </div>\r\n\r\n                <TextAreaFieldGroup\r\n                  placeholder=\"description\"\r\n                  error={errors.description}\r\n                  name=\"description\"\r\n                  value={this.state.description}\r\n                  onChange={this.onChange}\r\n                  info=\"tell us a little about your position\"\r\n                />\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"submit\"\r\n                  className=\"btn btn-info btn-block mt-4 \"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddExperience.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  addExperience: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    errors: state.errors,\r\n    profile: state.profile\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addExperience }\r\n)(withRouter(AddExperience));\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport TextFieldGroups from \"../../commons/TextFieldGroups\";\r\nimport TextAreaFieldGroup from \"../../commons/TextAreaFieldGroup\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addEducation } from \"../../actions/profileActions\";\r\n\r\nclass AddEducation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      school: \"\",\r\n      degree: \"\",\r\n      fieldofstudy: \"\",\r\n      from: \"\",\r\n      to: \"\",\r\n      current: false,\r\n      description: \"\",\r\n      disabled: false,\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  // This ccomponent updates the errors in the state\r\n  componentWillReceiveProps(nextProps) {\r\n    // updates the errors in the state\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // onsubmit method\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newObj = { ...this.state };\r\n    delete newObj.errors;\r\n    this.props.addEducation(newObj, this.props.history);\r\n  };\r\n\r\n  // on change function\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // This method is called when checked\r\n  onCheck = () => {\r\n    this.setState({\r\n      current: !this.state.current,\r\n      disabled: !this.state.disabled\r\n    });\r\n  };\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"section add-experience\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to=\"/dashboard\" className=\"btn btn-light\">\r\n                Go Back\r\n              </Link>\r\n              <h1 className=\"display-4 text-center\">Add Your Experience</h1>\r\n              <p className=\"lead text-center\">\r\n                Add any developer/programming positions that you have had in the\r\n                past\r\n              </p>\r\n              <small className=\"d-block pb-3\">* = required field</small>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroups\r\n                  placeholder=\"school\"\r\n                  error={errors.school}\r\n                  name=\"school\"\r\n                  value={this.state.school}\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <TextFieldGroups\r\n                  placeholder=\"degree\"\r\n                  error={errors.degree}\r\n                  name=\"degree\"\r\n                  value={this.state.degree}\r\n                  onChange={this.onChange}\r\n                />\r\n                <TextFieldGroups\r\n                  placeholder=\"fieldofstudy\"\r\n                  error={errors.fieldofstudy}\r\n                  name=\"fieldofstudy\"\r\n                  value={this.state.fieldofstudy}\r\n                  onChange={this.onChange}\r\n                />\r\n                <h6>from date</h6>\r\n                <TextFieldGroups\r\n                  type=\"date\"\r\n                  error={errors.from}\r\n                  name=\"from\"\r\n                  value={this.state.from}\r\n                  onChange={this.onChange}\r\n                />\r\n                <h6>to date</h6>\r\n                <TextFieldGroups\r\n                  type=\"date\"\r\n                  error={errors.to}\r\n                  name=\"to\"\r\n                  value={this.state.to}\r\n                  onChange={this.onChange}\r\n                  disabled={this.state.disabled ? \"disabled\" : \"\"}\r\n                />\r\n\r\n                <div className=\"form-check mb-4\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    name=\"current\"\r\n                    value={this.state.current}\r\n                    checked={this.state.current}\r\n                    onChange={this.onCheck}\r\n                    id=\"current\"\r\n                  />\r\n                  <label className=\"form-check-label\" for=\"current\">\r\n                    Current Job\r\n                  </label>\r\n                </div>\r\n\r\n                <TextAreaFieldGroup\r\n                  placeholder=\"description\"\r\n                  error={errors.description}\r\n                  name=\"description\"\r\n                  value={this.state.description}\r\n                  onChange={this.onChange}\r\n                  info=\"tell us a little about your position\"\r\n                />\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"submit\"\r\n                  className=\"btn btn-info btn-block mt-4 \"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddEducation.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  addEducation: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    errors: state.errors,\r\n    profile: state.profile\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addEducation }\r\n)(withRouter(AddEducation));\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport isEmpty from \"../../utils/is-empty\";\r\n\r\nclass ProfileItems extends Component {\r\n  render() {\r\n    const { profile } = this.props;\r\n\r\n    return (\r\n      <div className=\"card card-body bg-light mb-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <img className=\"rounded-circle\" src={profile.user.picture} alt=\"\" />\r\n          </div>\r\n          <div className=\"col-lg-6 col-md-4 col-8\">\r\n            <h3>{profile.user.fullname}</h3>\r\n            <p>\r\n              {profile.status}\r\n              {isEmpty(profile.company) ? null : ` at ${profile.company}`}\r\n            </p>\r\n            <p>{isEmpty(profile.location) ? null : `  ${profile.location}`}</p>\r\n            {/* <Link to={`/profile/${profile.handle}`} className=\"btn btn-info\">\r\n              View Profile\r\n            </Link> */}\r\n          </div>\r\n          <div className=\"col-md-4  d-lg-block\">\r\n            <h4>Skill Set</h4>\r\n            <ul className=\"list-group\">\r\n              {profile.skills.split(\",\").map((skill, index) => (\r\n                <li key={index} className=\"list-group-item\">\r\n                  <i className=\"fa fa-check pr-1\"></i>\r\n                  {skill}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfileItems.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileItems;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { getProfiles } from \"../../actions/profileActions\";\r\nimport ProfileItems from \"./ProfileItems\";\r\n\r\nclass Profile extends Component {\r\n  componentDidMount() {\r\n    this.props.getProfiles();\r\n  }\r\n\r\n  render() {\r\n    const { profiles, loading } = this.props.profile;\r\n\r\n    let profileItems;\r\n\r\n    if (profiles === null && loading) {\r\n      profileItems = (\r\n        <div className=\"text-center\">\r\n          <div className=\"spinner-border text-primary\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      if (profiles !== null && profiles.length > 0) {\r\n        // profileItems = Object.values(profiles).map(profile => (\r\n        //     <ProfileItems profile={Object.values(profile)} />\r\n        // ))\r\n        profileItems = profiles.map(profile => (\r\n          <ProfileItems key={profile.id} profile={profile} />\r\n        ));\r\n        // console.log(Object.values(profiles));\r\n      } else {\r\n        profileItems = <h1>No profile found</h1>;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"profiles\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Developer Profiles</h1>\r\n              <p className=\"lead text-center\">\r\n                Browse and connect with developers\r\n              </p>\r\n              {profileItems}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfile.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n\r\n  getProfiles: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    profile: state.profile\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfiles }\r\n)(Profile);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileGithub from \"./ProfileGithub\";\r\nimport ProfileCred from \"./ProfileCred\";\r\nimport { getProfileByHandle } from \"../../actions/profileActions\";\r\n\r\nclass ProfileH extends Component {\r\n  componentDidMount() {\r\n    if (this.props.match.params.handle) {\r\n      this.props.getProfileByHandle(this.props.match.params.handle);\r\n    }\r\n  }\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nProfileH.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n\r\n  getProfileByHandle: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    profile: state.profile\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfileByHandle }\r\n)(ProfileH);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ProfileHeader extends Component {\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass ProfileAbout extends Component {\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default ProfileAbout;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ProfileGithub extends Component {\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass ProfileCred extends Component {\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default ProfileCred;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logOutUser } from \"./actions/authActions\";\r\nimport { clearCurrentProfile } from \"./actions/profileActions\";\r\n\r\nimport \"./App.css\";\r\nimport store from \"./store\";\r\nimport Navbar from \"./component/Layout/Navbar\";\r\nimport Footer from \"./component/Layout/Footer\";\r\nimport Landing from \"./component/Layout/Landing\";\r\nimport Register from \"./component/auth/Register\";\r\nimport Login from \"./component/auth/Login\";\r\nimport Dashboard from \"./component/dashboard/Dashboard\";\r\nimport CreateProfile from \"./component/create-profile/CreateProfile\";\r\nimport EditProfile from \"./component/edit-profile/EditProfile\";\r\nimport AddExperience from \"./component/add-credentials/AddExperience\";\r\nimport AddEducation from \"./component/add-credentials/AddEducation\";\r\nimport Profile from \"./component/profile/Profile\";\r\nimport ProfileH from \"./component/profilesection/Profile\";\r\n\r\nimport PrivateRoute from \"./commons/PrivateRoute\";\r\n\r\n// This keeps the user logged in in the application\r\nif (localStorage[\"jwtToken\"]) {\r\n  // set auth header\r\n  setAuthToken(localStorage.jwtToken);\r\n\r\n  // Decode token  and get current user\r\n  const decoded = jwt_decode(localStorage.jwtToken);\r\n\r\n  // set the user reducer\r\n  store.dispatch(setCurrentUser(decoded));\r\n\r\n  // check if the token has expired\r\n  const currentTime = Date.now() / 1000;\r\n\r\n  if (decoded.exp < currentTime) {\r\n    //logout user\r\n    store.dispatch(logOutUser());\r\n\r\n    // clear current profile\r\n    store.dispatch(clearCurrentProfile());\r\n    // redirect to the login\r\n    window.location.href = \"/login\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/profiles\" component={Profile} />\r\n          <Route exact path=\"/profile/:handle\" component={ProfileH} />\r\n\r\n          <Switch>\r\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n          </Switch>\r\n          <Switch>\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/create-profile\"\r\n              component={CreateProfile}\r\n            />\r\n          </Switch>\r\n          <Switch>\r\n            <PrivateRoute exact path=\"/edit-profile\" component={EditProfile} />\r\n          </Switch>\r\n          <Switch>\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/add-experience\"\r\n              component={AddExperience}\r\n            />\r\n          </Switch>\r\n          <Switch>\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/add-education\"\r\n              component={AddEducation}\r\n            />\r\n          </Switch>\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <Footer />\r\n        </div>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}